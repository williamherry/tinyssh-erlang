#!/bin/bash

which erl &> /dev/null
if [ "0" != "$?" ]; then
  echo "You need install erlang first"
  exit
fi

ls tinyssh.beam &> /dev/null
if [ "0" != "$?" ]; then
  erlc tinyssh.erl
fi

TEMP=`getopt -o l:u:p:k: -n 'example.bash' -- "$@"`

if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

eval set -- "$TEMP"

while true ; do
  case "$1" in
    -l)
      Host_file=$2; shift 2
      ;;
    -u)
      User=$2; shift 2
      ;;
    -p)
      Port=$2; shift 2
      ;;
    -k)
      Password=$2; shift 2
      ;;
    --)
      shift ;
      break
      ;;
    *)
      echo "Internal error!" ; exit 1
      ;;
  esac
done

for arg do
   #echo '--> '"\`$arg'" ;
   Arg[${#Arg[@]}]="$arg"
done

if [ "3" == "${#Arg[@]}" ]; then
  Action="${Arg[0]}"
  From="${Arg[1]}"
  To="${Arg[2]}"
  erl -run tinyssh upload_download $Host_file $Port $User $Password $Action $From $To -noshell
elif [ "2" == "${#Arg[@]}" ]; then
  Action="run"
  Cmd="${Arg[1]}"
  erl -run tinyssh run_cmd $Host_file $Port $User $Password $Action "$Cmd" -noshell
else
  echo -e "\nWrong argument, example usage:\n"
  echo -e "\t tinyssh run 'ls -l' -l ips.txt -u username -p 22 -k password"
  echo -e "\t tinyssh upload|download from_file to_file -l ips.txt -u username, -p 22 -k password\n"
fi
